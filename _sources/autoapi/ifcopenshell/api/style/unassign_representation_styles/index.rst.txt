:py:mod:`ifcopenshell.api.style.unassign_representation_styles`
===============================================================

.. py:module:: ifcopenshell.api.style.unassign_representation_styles


Module Contents
---------------

.. py:class:: Usecase(file, shape_representation=None, styles=None, should_use_presentation_style_assignment=False)


   
   Unassigns styles directly assigned to an object representation

   This does the inverse of assign_representation_styles.

   :param shape_representation: The IfcShapeRepresentation of the object
       that you want to unassign styles from.
   :type shape_representation: ifcopenshell.entity_instance.entity_instance
   :param styles: A list of presentation styles, typically IfcSurfaceStyle.
       The number of items in the list should correlate with the number of
       items in the shape_representation's Items attribute. If you have
       more items than styles, the last style is used.
   :type styles: list[ifcopenshell.entity_instance.entity_instance]
   :param should_use_presentation_style_assignment: This is a technical
       detail to accomodate a bug in Revit. This should always be left as
       the default of False, unless you are finding that colours aren't
       showing up in Revit. In that case, set it to True, but keep in mind
       that this is no longer a valid IFC. Blame Autodesk.
   :type should_use_presentation_style_assignment: bool
   :return: None
   :rtype: None

   Example:

   .. code:: python

       ifcopenshell.api.run("style.unassign_representation_styles", model,
           shape_representation=representation, styles=[style])

   .. py:method:: execute()


   .. py:method:: remove_styles(item)

      Removes styles from a styled item or a style assignment
      and purges item if doesn't have any styles after




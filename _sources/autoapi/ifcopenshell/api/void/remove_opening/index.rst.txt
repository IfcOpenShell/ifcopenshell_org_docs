:py:mod:`ifcopenshell.api.void.remove_opening`
==============================================

.. py:module:: ifcopenshell.api.void.remove_opening


Module Contents
---------------

.. py:function:: remove_opening(file: ifcopenshell.file, opening: ifcopenshell.entity_instance) -> None

   Remove an opening

   Fillings are retained as orphans. Voided elements remain. Openings
   cannot exist by themselves, so not only is the opening relationship
   removed, the opening is also removed.

   :param opening: The IfcOpeningElement to remove.
   :type opening: ifcopenshell.entity_instance
   :return: None
   :rtype: None

   Example:

   .. code:: python

       # Create an oprhaned opening. Note that an orphaned opening is
       # invalid, as an opening can only exist when voiding another
       # element.
       opening = ifcopenshell.api.root.create_entity(model, ifc_class="IfcOpeningElement")

       # Remove it. This brings us back to a valid model.
       ifcopenshell.api.void.remove_opening(model, opening=opening)



:py:mod:`ifcopenshell.api.geometry.add_railing_representation`
==============================================================

.. py:module:: ifcopenshell.api.geometry.add_railing_representation


Module Contents
---------------

.. py:class:: Usecase

   .. py:method:: convert_si_to_unit(value: float) -> float


   .. py:method:: execute()


   .. py:method:: path_si_to_units(path: numpy.ndarray) -> numpy.ndarray

      converts list of vectors from SI to ifc project units



   .. py:attribute:: file
      :type:  ifcopenshell.file


   .. py:attribute:: settings
      :type:  dict[str, Any]


.. py:function:: add_railing_representation(file: ifcopenshell.file, *, context: ifcopenshell.entity_instance, railing_type: Literal['WALL_MOUNTED_HANDRAIL'] = 'WALL_MOUNTED_HANDRAIL', railing_path: ifcopenshell.util.shape_builder.SequenceOfVectors, use_manual_supports: bool = False, support_spacing: Optional[float] = None, railing_diameter: Optional[float] = None, clear_width: Optional[float] = None, terminal_type: TERMINAL_TYPE = '180', height: Optional[float] = None, looped_path: bool = False, unit_scale: Optional[float] = None) -> ifcopenshell.entity_instance

   Units are expected to be in IFC project units.

   :param context: IfcGeometricRepresentationContext for the representation.
   :param railing_type: Type of the railing. Defaults to "WALL_MOUNTED_HANDRAIL".
   :param railing_path: A list of points coordinates for the railing path,
       coordinates are expected to be at the top of the railing, not at the center.
       If not provided, default path [(0, 0, 1), (1, 0, 1), (2, 0, 1)] (in meters) will be used
   :param use_manual_supports: If enabled, supports are added on every vertex on the edges of the railing path.
       If disabled, supports are added automatically based on the support spacing. Default to False.
   :param support_spacing: Distance between supports if automatic supports are used. Defaults to 1m.
   :param railing_diameter: Railing diameter. Defaults to 50mm.
   :param clear_width: Clear width between the railing and the wall. Defaults to 40mm.
   :param terminal_type: type of the cap. Defaults to "180".
   :param height: defaults to 1m
   :param looped_path: Whether to end the railing on the first point of `railing_path`. Defaults to False.
   :param unit_scale: The unit scale as calculated by
       ifcopenshell.util.unit.calculate_unit_scale. If not provided, it
       will be automatically calculated for you.
   :return: IfcShapeRepresentation for a railing.


.. py:function:: mm(x: float) -> float

   mm to meters shortcut for readability


.. py:data:: TERMINAL_TYPE


:py:mod:`ifcopenshell.api.geometry.add_wall_representation`
===========================================================

.. py:module:: ifcopenshell.api.geometry.add_wall_representation


Module Contents
---------------

.. py:class:: Usecase

   .. py:method:: apply_booleans(first_operand: ifcopenshell.entity_instance) -> ifcopenshell.entity_instance


   .. py:method:: apply_clippings(first_operand: ifcopenshell.entity_instance) -> ifcopenshell.entity_instance


   .. py:method:: convert_si_to_unit(co: Any) -> Any


   .. py:method:: create_item() -> ifcopenshell.entity_instance


   .. py:method:: execute() -> ifcopenshell.entity_instance


   .. py:attribute:: clippings
      :type:  list[ifcopenshell.util.data.Clipping]


   .. py:attribute:: file
      :type:  ifcopenshell.file


   .. py:attribute:: settings
      :type:  dict[str, Any]


.. py:function:: add_wall_representation(file: ifcopenshell.file, context: ifcopenshell.entity_instance, length: float = 1.0, height: float = 3.0, direction_sense: str = 'POSITIVE', offset: float = 0.0, thickness: float = 0.2, x_angle: float = 0.0, clippings: Optional[list[Union[ifcopenshell.util.data.Clipping, dict[str, Any]]]] = None, booleans: Optional[list[ifcopenshell.entity_instance]] = None) -> ifcopenshell.entity_instance

   Add a geometric representation for a wall.

   :param context: The IfcGeometricRepresentationContext for the representation,
       only Model/Body/MODEL_VIEW type of representations are currently supported.
   :param length: The length of the wall in meters.
   :param height: The height of the wall in meters.
   :param offset: The base offset distance of the wall from the origin.
   :param thickness: The thickness of the wall in meters.
   :param x_angle: The slope angle along the wall's X-axis, in radians.
   :param clippings: List of clipping definitions. Clippings can be `Clipping` objects
       or dictionaries of arguments for `Clipping.parse`.
   :param booleans: List of any existing IfcBooleanResults.
   :return: IfcShapeRepresentation.



:py:mod:`ifcopenshell.api.geometry.add_representation`
======================================================

.. py:module:: ifcopenshell.api.geometry.add_representation


Module Contents
---------------

.. py:class:: Usecase(file, **settings)


   .. py:method:: convert_si_to_unit(co)


   .. py:method:: create_annotation2d_representation()


   .. py:method:: create_annotation3d_representation()


   .. py:method:: create_annotation_fill_areas(is_2d=False)


   .. py:method:: create_arbitrary_extrusion_representation()


   .. py:method:: create_arbitrary_void_extrusion_representation()


   .. py:method:: create_box_representation()


   .. py:method:: create_camera_block_representation()


   .. py:method:: create_camera_pyramid_representation()


   .. py:method:: create_cartesian_point(x, y, z=None)


   .. py:method:: create_cartesian_point_list_from_vertices(vertices, is_2d=False)


   .. py:method:: create_circle_extrusion_representation()


   .. py:method:: create_curve2d_representation()


   .. py:method:: create_curve3d_representation()


   .. py:method:: create_curve_bounded_planes(is_2d=False)


   .. py:method:: create_curve_from_polygon(points, polygon, is_2d=False)


   .. py:method:: create_curve_from_polygon_ifc2x3(polygon, is_2d=False)


   .. py:method:: create_curves(should_exclude_faces=False, is_2d=False)


   .. py:method:: create_curves_from_curve(is_2d=False, curve_object_data=None)


   .. py:method:: create_curves_from_curve_ifc2x3(is_2d=False, curve_object_data=None)


   .. py:method:: create_curves_from_mesh(should_exclude_faces=False, is_2d=False)


   .. py:method:: create_curves_from_mesh_ifc2x3(should_exclude_faces=False, is_2d=False)


   .. py:method:: create_edge()


   .. py:method:: create_faceted_brep()


   .. py:method:: create_geometric_curve_set_representation(is_2d=False)


   .. py:method:: create_light_source()


   .. py:method:: create_light_source_positional()


   .. py:method:: create_lighting_representation()


   .. py:method:: create_material_profile_set_extrusion_representation()


   .. py:method:: create_mesh_representation()


   .. py:method:: create_model_representation()


   .. py:method:: create_plan_representation()


   .. py:method:: create_plane(polygon)


   .. py:method:: create_point_cloud_representation(is_2d=False)


   .. py:method:: create_polygonal_face_set()


   .. py:method:: create_rectangle_extrusion_representation()


   .. py:method:: create_structural_reference_representation()


   .. py:method:: create_swept_disk_solid_representation()


   .. py:method:: create_swept_disk_solids()


   .. py:method:: create_text()


   .. py:method:: create_text_representation(is_2d=False)


   .. py:method:: create_triangulated_face_set()


   .. py:method:: create_variable_representation()


   .. py:method:: create_vertex_point(point)


   .. py:method:: create_vertices(is_2d=False)


   .. py:method:: evaluate_geometry()


   .. py:method:: execute()


   .. py:method:: is_camera_landscape()


   .. py:method:: is_mesh_curve_consequtive(geom_data)


   .. py:method:: remove_doubles_from_mesh(mesh)


   .. py:method:: should_triangulate_face(face, threshold=EPSILON)



.. py:data:: EPSILON
   :value: 1e-06

   

.. py:data:: X_AXIS

   

.. py:data:: Z_AXIS

   


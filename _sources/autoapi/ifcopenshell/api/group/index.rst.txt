:py:mod:`ifcopenshell.api.group`
================================

.. py:module:: ifcopenshell.api.group

.. autoapi-nested-parse::

   Elements may be arbitrarily assigned to groups for organisation

   Groups are useful for filtering elements or non-hierarchical organisation of a
   model. Note that this only targets arbitrary groups. If you want to group
   elements into a distribution system, see :mod:`ifcopenshell.api.system`.



Submodules
----------
.. toctree::
   :titlesonly:
   :maxdepth: 1

   add_group/index.rst
   assign_group/index.rst
   edit_group/index.rst
   remove_group/index.rst
   unassign_group/index.rst
   update_group_products/index.rst


Package Contents
----------------

.. py:function:: add_group(file: ifcopenshell.file, name: str = 'Unnamed', description: Optional[str] = None) -> ifcopenshell.entity_instance

   Adds a new group

   An IFC group is an arbitrary collection of products, which are typically
   physical. It may be used when there is no other more specific group
   which may be used. Other types of groups include distribution systems,
   which group together products that are connected and circulate a medium
   (such as fluid or electricity), or zones, which group together spaces,
   or structural load groups, which group together loads for structural
   analysis, or inventories, which are groups of assets.

   :param name: The name of the group. Defaults to "Unnamed"
   :param description: The description of the purpose of the group.
   :return: The newly created IfcGroup

   Example:

   .. code:: python

       ifcopenshell.api.group.add_group(model, name="Unit 1A")


.. py:function:: assign_group(file: ifcopenshell.file, products: list[ifcopenshell.entity_instance], group: ifcopenshell.entity_instance) -> Union[ifcopenshell.entity_instance, None]

   Assigns products to a group

   If a product is already assigned to the group, it will not be assigned
   twice.

   :param products: A list of IfcProduct elements to assign to the group
   :param group: The IfcGroup to assign the products to
   :return: The IfcRelAssignsToGroup relationship
       or `None` if `products` was empty list.

   Example:

   .. code:: python

       group = ifcopenshell.api.group.add_group(model, name="Furniture")
       ifcopenshell.api.group.assign_group(model,
           products=model.by_type("IfcFurniture"), group=group)


.. py:function:: edit_group(file: ifcopenshell.file, group: ifcopenshell.entity_instance, attributes: dict[str, Any]) -> None

   Edits the attributes of an IfcGroup

   For more information about the attributes and data types of an
   IfcGroup, consult the IFC documentation.

   :param group: The IfcGroup entity you want to edit
   :param attributes: a dictionary of attribute names and values.
   :return: None

   Example:

   .. code:: python

       group = ifcopenshell.api.group.add_group(model, name="Unit 1A")
       ifcopenshell.api.group.edit_group(model,
           group=group, attributes={"Description": "All furniture and joinery included in the unit"})


.. py:function:: remove_group(file: ifcopenshell.file, group: ifcopenshell.entity_instance) -> None

   Removes a group

   All products assigned to the group will remain, but the relationship to
   the group will be removed.

   :param group: The IfcGroup entity you want to remove
   :return: None

   Example:

   .. code:: python

       group = ifcopenshell.api.group.add_group(model, name="Unit 1A")
       ifcopenshell.api.group.remove_group(model, group=group)


.. py:function:: unassign_group(file: ifcopenshell.file, products: list[ifcopenshell.entity_instance], group: ifcopenshell.entity_instance) -> None

   Unassigns products from a group

   If the product isn't assigned to the group, nothing will happen.

   :param products: A list of IfcProduct elements to unassign from the group
   :param group: The IfcGroup to unassign from
   :return: None

   Example:

   .. code:: python

       group = ifcopenshell.api.group.add_group(model, name="Furniture")
       furniture = model.by_type("IfcFurniture")
       ifcopenshell.api.group.assign_group(model, products=furniture, group=group)

       bad_furniture = furniture[0]
       ifcopenshell.api.group.unassign_group(model, products=[bad_furniture], group=group)


.. py:function:: update_group_products(file: ifcopenshell.file, group: ifcopenshell.entity_instance, products: list[ifcopenshell.entity_instance]) -> ifcopenshell.entity_instance

   Sets a group products to be an explicit list of products

   Any previous products assigned to that group will have their assignment
   removed.

   :param products: A list of IfcProduct elements to assign to the group
   :param group: The IfcGroup to assign the products to
   :return: The IfcRelAssignsToGroup relationship

   Example:

   .. code:: python

       group = ifcopenshell.api.group.add_group(model, name="Furniture")
       ifcopenshell.api.group.update_group_products(model,
           products=model.by_type("IfcFurniture"), group=group)



:py:mod:`ifcopenshell.api.attribute`
====================================

.. py:module:: ifcopenshell.api.attribute

.. autoapi-nested-parse::

   Basic modification of the attributes of an element.

   All IFC entities have attributes. Some of these attributes contain rules about
   inheritance and what they are allowed to contain. These usecases make sure that
   any editing complies with these rules.



Submodules
----------
.. toctree::
   :titlesonly:
   :maxdepth: 1

   edit_attributes/index.rst


Package Contents
----------------

.. py:function:: edit_attributes(file: ifcopenshell.file, product: ifcopenshell.entity_instance, attributes: dict[str, Any]) -> None

   Edit the attributes of a product

   All IFC entities have attributes. Normally they can be edited directly,
   by simply assigning a new value to them. In some scenarios, you may wish
   to also ensure that ownership history is updated. This function provides
   that convenience.

   The method will maintain consistency for PredefinedType attribute
   based on whether ElementType/ObjectType and whether occurrence is typed:

   - PredefinedType and ObjectType to be `None` if occurrence is typed
   - PredefinedType to be "NOTDEFINED" if ElementType/ObjectType is None
   - PredefinedType to be "USERDEFINED" if ElementType/ObjectType is not None

   :param product: The product you want to edit. This may be any rooted IFC
       entity.
   :param attributes: a dictionary of attribute names and values.
   :return: None

   Example:

   .. code:: python

       element = ifcopenshell.api.root.create_entity(model, ifc_class="IfcWall")
       ifcopenshell.api.attribute.edit_attributes(model,
           product=element, attributes={"Name": "Waldo"})



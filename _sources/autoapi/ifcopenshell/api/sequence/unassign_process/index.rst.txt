:py:mod:`ifcopenshell.api.sequence.unassign_process`
====================================================

.. py:module:: ifcopenshell.api.sequence.unassign_process


Module Contents
---------------

.. py:function:: unassign_process(file, relating_process=None, related_object=None) -> None

   Unassigns a process and object relationship

   See ifcopenshell.api.sequence.assign_process for details.

   :param relating_process: The IfcTask in the relationship.
   :type relating_process: ifcopenshell.entity_instance
   :param related_object: The related object.
   :type related_object: ifcopenshell.entity_instance
   :return: None
   :rtype: None

   Example:

   .. code:: python

       # Let's imagine we are creating a construction schedule. All tasks
       # need to be part of a work schedule.
       schedule = ifcopenshell.api.run("sequence.add_work_schedule", model, name="Construction Schedule A")

       # Let's create a construction task. Note that the predefined type is
       # important to distinguish types of tasks.
       task = ifcopenshell.api.run("sequence.add_task", model,
           work_schedule=schedule, name="Demolish existing", identification="A", predefined_type="DEMOLITION")

       # Let's say we have a wall somewhere.
       wall = ifcopenshell.api.run("root.create_entity", model, ifc_class="IfcWall")

       # Let's demolish that wall!
       ifcopenshell.api.run("sequence.assign_process", model, relating_process=task, related_object=wall)

       # Change our mind.
       ifcopenshell.api.run("sequence.unassign_process", model, relating_process=task, related_object=wall)



:py:mod:`ifcopenshell.api.system.assign_port`
=============================================

.. py:module:: ifcopenshell.api.system.assign_port


Module Contents
---------------

.. py:class:: Usecase


   .. py:method:: execute()


   .. py:method:: execute_ifc2x3()


   .. py:method:: update_port_placement()



.. py:function:: assign_port(file, element=None, port=None) -> None

   Assigns a port to an element

   If you have an orphaned port, you may assign it to a distribution
   element using this function. Ports should typically not be orphaned, but
   it may be useful when patching up models.

   :param element: The IfcDistributionElement to assign the port to.
   :type element: ifcopenshell.entity_instance
   :param port: The IfcDistributionPort you want to assign.
   :type port: ifcopenshell.entity_instance
   :return: The IfcRelNests relationship, or the
       IfcRelConnectsPortToElement for IFC2X3.
   :rtype: ifcopenshell.entity_instance

   Example:

   .. code:: python

       # Create a duct
       duct = ifcopenshell.api.run("root.create_entity", model,
           ifc_class="IfcDuctSegment", predefined_type="RIGIDSEGMENT")

       # Create 2 ports, one for either end.
       port1 = ifcopenshell.api.run("system.add_port", model, element=duct)
       port2 = ifcopenshell.api.run("system.add_port", model, element=duct)

       # Unassign one port for some weird reason.
       ifcopenshell.api.run("system.unassign_port", model, element=duct, port=port1)

       # Reassign it back
       ifcopenshell.api.run("system.assign_port", model, element=duct, port=port1)



:py:mod:`ifcopenshell.api.control.unassign_control`
===================================================

.. py:module:: ifcopenshell.api.control.unassign_control


Module Contents
---------------

.. py:class:: Usecase(file, relating_control=None, related_object=None)


   
   Unassigns a planning control or constraint to an object

   :param relating_control: The IfcControl entity that is creating the
       control or constraint
   :type relating_control: ifcopenshell.entity_instance.entity_instance
   :param related_object: The IfcObjectDefinition that is being controlled
   :type related_object: ifcopenshell.entity_instance.entity_instance
   :return: If the control still is related to other objects, the
       IfcRelAssignsToControl is returned, otherwise None.
   :rtype: ifcopenshell.entity_instance.entity_instance, None

   Example:

   .. code:: python

       # Let's relate a cost item and a product
       wall = ifcopenshell.api.run("root.create_entity", model, ifc_class="IfcWall")
       schedule = ifcopenshell.api.run("cost.add_cost_schedule", model)
       cost_item = ifcopenshell.api.run("cost.add_cost_item", model,
           cost_schedule=schedule)
       ifcopenshell.api.run("control.assign_control", model,
           relating_control=cost_item, related_object=wall)

       # And now let's change our mind
       ifcopenshell.api.run("control.unassign_control", model,
           relating_control=cost_item, related_object=wall)

   .. py:method:: execute()




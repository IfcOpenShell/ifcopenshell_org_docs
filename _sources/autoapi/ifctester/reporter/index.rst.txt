:py:mod:`ifctester.reporter`
============================

.. py:module:: ifctester.reporter


Module Contents
---------------

.. py:class:: Bcf(ids)


   Bases: :py:obj:`Json`

   .. py:method:: report_failed_entities(requirement)


   .. py:method:: to_file(filepath: str) -> None



.. py:class:: Console(ids, use_colour=True)


   Bases: :py:obj:`Reporter`

   .. py:method:: print(txt, end=None)


   .. py:method:: report()


   .. py:method:: report_reason(failure)


   .. py:method:: report_specification(specification)


   .. py:method:: set_style(*colours)



.. py:class:: Html(ids)


   Bases: :py:obj:`Json`

   .. py:method:: report()


   .. py:method:: to_file(filepath: str) -> None


   .. py:method:: to_string()



.. py:class:: Json(ids)


   Bases: :py:obj:`Reporter`

   .. py:method:: report()


   .. py:method:: report_failed_entities(requirement)


   .. py:method:: report_specification(specification)


   .. py:method:: to_file(filepath: str) -> None


   .. py:method:: to_string()



.. py:class:: Ods(ids)


   Bases: :py:obj:`Json`

   .. py:method:: to_file(filepath: str) -> None



.. py:class:: Reporter(ids)


   .. py:method:: report(ids)


   .. py:method:: to_string()


   .. py:method:: write(filepath)



.. py:class:: Txt(ids)


   Bases: :py:obj:`Console`

   .. py:method:: print(txt, end=None)


   .. py:method:: to_file(filepath: str) -> None


   .. py:method:: to_string()



.. py:data:: cwd

   


:py:mod:`ifccsv`
================

.. py:module:: ifccsv


Module Contents
---------------

.. py:class:: IfcCsv

   .. py:method:: Import(ifc_file: ifcopenshell.file, table: str, attributes: Optional[list[Union[str, None]]] = None, delimiter: str = ',', null: str = '-', empty: str = '', bool_true: str = 'YES', bool_false: str = 'NO', concat: str = ', ') -> None

      Args:
          table: filepath to the table.



   .. py:method:: export(ifc_file: ifcopenshell.file, elements: collections.abc.Iterable[ifcopenshell.entity_instance], attributes: Union[list[str], None], headers: Optional[list[str]] = None, output=None, format: FILE_FORMAT = None, should_preserve_existing: bool = False, include_global_id: bool = True, delimiter: str = ',', null: str = '-', empty: str = '', bool_true: str = 'YES', bool_false: str = 'NO', concat: str = ', ', sort=None, groups=None, summaries=None, formatting=None)


   .. py:method:: export_csv(output: str, delimiter: Optional[str] = None) -> None


   .. py:method:: export_ods(output, should_preserve_existing=False)


   .. py:method:: export_pd()


   .. py:method:: export_xlsx(output, should_preserve_existing=False)


   .. py:method:: format_results(formatting, attributes, null)


   .. py:method:: get_col(row, col_index)


   .. py:method:: get_row(table, row_index)


   .. py:method:: get_wildcard_attributes(attribute)


   .. py:method:: group_results(groups, attributes)


   .. py:method:: has_summaries()


   .. py:method:: import_csv(ifc_file: ifcopenshell.file, table: str, attributes: Optional[list[Union[str, None]]] = None, delimiter: str = ',', null: str = '-', empty: str = '', bool_true: str = 'YES', bool_false: str = 'NO', concat: str = ', ') -> None


   .. py:method:: import_ods(ifc_file, table, attributes, null, empty, bool_true, bool_false, concat) -> None


   .. py:method:: import_pd(ifc_file: ifcopenshell.file, df: pandas.DataFrame, attributes: Optional[list[Union[str, None]]] = None, null: str = '-', empty: str = '', bool_true: str = 'YES', bool_false: str = 'NO', concat: str = ', ') -> None


   .. py:method:: import_xlsx(ifc_file, table, attributes, null, empty, bool_true, bool_false, concat) -> None


   .. py:method:: process_row(ifc_file: ifcopenshell.file, row: list[str], headers: list[str], attributes: list[Union[str, None]], null: str, empty: str, bool_true: str, bool_false: str, concat: str) -> None


   .. py:method:: set_cell_value(cell, value)


   .. py:method:: sort_results(sort, attributes, include_global_id)


   .. py:method:: summarise_results(summaries, attributes)


   .. py:attribute:: attributes
      :type:  list[str]


   .. py:attribute:: dataframe
      :value: None



   .. py:attribute:: headers
      :type:  list[str]


   .. py:attribute:: results
      :value: []



.. py:data:: FILE_FORMAT

.. py:data:: parser


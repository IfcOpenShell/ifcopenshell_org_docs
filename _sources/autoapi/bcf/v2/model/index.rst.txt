:py:mod:`bcf.v2.model`
======================

.. py:module:: bcf.v2.model


Submodules
----------
.. toctree::
   :titlesonly:
   :maxdepth: 1

   extensions/index.rst
   markup/index.rst
   project/index.rst
   version/index.rst
   visinfo/index.rst


Package Contents
----------------

.. py:class:: BimSnippet

   .. py:attribute:: is_external
      :type:  bool
      :value: False



   .. py:attribute:: reference
      :type:  str


   .. py:attribute:: reference_schema
      :type:  str


   .. py:attribute:: snippet_type
      :type:  str


.. py:class:: BitmapFormat(*args, **kwds)

   Bases: :py:obj:`enum.Enum`


   Create a collection of name/value pairs.

   Example enumeration:

   >>> class Color(Enum):
   ...     RED = 1
   ...     BLUE = 2
   ...     GREEN = 3

   Access them by:

   - attribute access:

     >>> Color.RED
     <Color.RED: 1>

   - value lookup:

     >>> Color(1)
     <Color.RED: 1>

   - name lookup:

     >>> Color['RED']
     <Color.RED: 1>

   Enumerations can be iterated over, and know how many members they have:

   >>> len(Color)
   3

   >>> list(Color)
   [<Color.RED: 1>, <Color.BLUE: 2>, <Color.GREEN: 3>]

   Methods can be added to enumerations, and members can have their own
   attributes -- see the documentation for details.


   .. py:attribute:: JPG
      :value: 'JPG'



   .. py:attribute:: PNG
      :value: 'PNG'



.. py:class:: ClippingPlane

   .. py:attribute:: direction
      :type:  Direction


   .. py:attribute:: location
      :type:  Point


.. py:class:: Comment

   .. py:attribute:: author
      :type:  str


   .. py:attribute:: comment
      :type:  str


   .. py:attribute:: date
      :type:  xsdata.models.datatype.XmlDateTime


   .. py:attribute:: guid
      :type:  str


   .. py:attribute:: modified_author
      :type:  Optional[str]
      :value: None



   .. py:attribute:: modified_date
      :type:  Optional[xsdata.models.datatype.XmlDateTime]
      :value: None



   .. py:attribute:: viewpoint
      :type:  Optional[CommentViewpoint]
      :value: None



.. py:class:: CommentViewpoint

   .. py:class:: Meta

      .. py:attribute:: global_type
         :value: False




   .. py:attribute:: guid
      :type:  str


.. py:class:: Component

   .. py:attribute:: authoring_tool_id
      :type:  Optional[str]
      :value: None



   .. py:attribute:: ifc_guid
      :type:  Optional[str]
      :value: None



   .. py:attribute:: originating_system
      :type:  Optional[str]
      :value: None



.. py:class:: ComponentColoring

   .. py:attribute:: color
      :type:  List[ComponentColoringColor]
      :value: []



.. py:class:: ComponentColoringColor

   .. py:class:: Meta

      .. py:attribute:: global_type
         :value: False




   .. py:attribute:: color
      :type:  Optional[str]
      :value: None



   .. py:attribute:: component
      :type:  List[Component]
      :value: []



.. py:class:: ComponentSelection

   .. py:attribute:: component
      :type:  List[Component]
      :value: []



.. py:class:: ComponentVisibility

   .. py:attribute:: default_visibility
      :type:  Optional[bool]
      :value: None



   .. py:attribute:: exceptions
      :type:  Optional[ComponentVisibilityExceptions]
      :value: None



.. py:class:: ComponentVisibilityExceptions

   .. py:class:: Meta

      .. py:attribute:: global_type
         :value: False




   .. py:attribute:: component
      :type:  List[Component]
      :value: []



.. py:class:: Components

   .. py:attribute:: coloring
      :type:  Optional[ComponentColoring]
      :value: None



   .. py:attribute:: selection
      :type:  Optional[ComponentSelection]
      :value: None



   .. py:attribute:: view_setup_hints
      :type:  Optional[ViewSetupHints]
      :value: None



   .. py:attribute:: visibility
      :type:  ComponentVisibility


.. py:class:: Direction

   .. py:attribute:: x
      :type:  float


   .. py:attribute:: y
      :type:  float


   .. py:attribute:: z
      :type:  float


.. py:class:: Header

   .. py:attribute:: file
      :type:  List[HeaderFile]
      :value: []



.. py:class:: HeaderFile

   .. py:class:: Meta

      .. py:attribute:: global_type
         :value: False




   .. py:attribute:: date
      :type:  Optional[xsdata.models.datatype.XmlDateTime]
      :value: None



   .. py:attribute:: filename
      :type:  Optional[str]
      :value: None



   .. py:attribute:: ifc_project
      :type:  Optional[str]
      :value: None



   .. py:attribute:: ifc_spatial_structure_element
      :type:  Optional[str]
      :value: None



   .. py:attribute:: is_external
      :type:  bool
      :value: True



   .. py:attribute:: reference
      :type:  Optional[str]
      :value: None



.. py:class:: Line

   .. py:attribute:: end_point
      :type:  Point


   .. py:attribute:: start_point
      :type:  Point


.. py:class:: Markup

   .. py:attribute:: comment
      :type:  List[Comment]
      :value: []



   .. py:attribute:: header
      :type:  Optional[Header]
      :value: None



   .. py:attribute:: topic
      :type:  Topic


   .. py:attribute:: viewpoints
      :type:  List[ViewPoint]
      :value: []



.. py:class:: OrthogonalCamera

   Attributes
       camera_view_point:
       camera_direction:
       camera_up_vector:
       view_to_world_scale: view's visible size in meters


   .. py:attribute:: camera_direction
      :type:  Direction


   .. py:attribute:: camera_up_vector
      :type:  Direction


   .. py:attribute:: camera_view_point
      :type:  Point


   .. py:attribute:: view_to_world_scale
      :type:  float


.. py:class:: PerspectiveCamera

   Attributes
       camera_view_point:
       camera_direction:
       camera_up_vector:
       field_of_view: It is currently limited to a value between 45 and
           60 degrees. This limitation will be dropped in the next
           release and viewers should be expect values outside this
           range in current implementations.


   .. py:attribute:: camera_direction
      :type:  Direction


   .. py:attribute:: camera_up_vector
      :type:  Direction


   .. py:attribute:: camera_view_point
      :type:  Point


   .. py:attribute:: field_of_view
      :type:  float


.. py:class:: Point

   .. py:attribute:: x
      :type:  float


   .. py:attribute:: y
      :type:  float


   .. py:attribute:: z
      :type:  float


.. py:class:: Project

   .. py:attribute:: name
      :type:  Optional[str]
      :value: None



   .. py:attribute:: project_id
      :type:  str


.. py:class:: ProjectExtension

   .. py:attribute:: extension_schema
      :type:  str


   .. py:attribute:: project
      :type:  Optional[Project]
      :value: None



.. py:class:: Topic

   .. py:attribute:: assigned_to
      :type:  Optional[str]
      :value: None



   .. py:attribute:: bim_snippet
      :type:  Optional[BimSnippet]
      :value: None



   .. py:attribute:: creation_author
      :type:  str


   .. py:attribute:: creation_date
      :type:  xsdata.models.datatype.XmlDateTime


   .. py:attribute:: description
      :type:  Optional[str]
      :value: None



   .. py:attribute:: document_reference
      :type:  List[TopicDocumentReference]
      :value: []



   .. py:attribute:: due_date
      :type:  Optional[xsdata.models.datatype.XmlDateTime]
      :value: None



   .. py:attribute:: guid
      :type:  str


   .. py:attribute:: index
      :type:  Optional[int]
      :value: None



   .. py:attribute:: labels
      :type:  List[str]
      :value: []



   .. py:attribute:: modified_author
      :type:  Optional[str]
      :value: None



   .. py:attribute:: modified_date
      :type:  Optional[xsdata.models.datatype.XmlDateTime]
      :value: None



   .. py:attribute:: priority
      :type:  Optional[str]
      :value: None



   .. py:attribute:: reference_link
      :type:  List[str]
      :value: []



   .. py:attribute:: related_topic
      :type:  List[TopicRelatedTopic]
      :value: []



   .. py:attribute:: stage
      :type:  Optional[str]
      :value: None



   .. py:attribute:: title
      :type:  str


   .. py:attribute:: topic_status
      :type:  Optional[str]
      :value: None



   .. py:attribute:: topic_type
      :type:  Optional[str]
      :value: None



.. py:class:: TopicDocumentReference

   .. py:class:: Meta

      .. py:attribute:: global_type
         :value: False




   .. py:attribute:: description
      :type:  Optional[str]
      :value: None



   .. py:attribute:: guid
      :type:  Optional[str]
      :value: None



   .. py:attribute:: is_external
      :type:  bool
      :value: False



   .. py:attribute:: referenced_document
      :type:  Optional[str]
      :value: None



.. py:class:: TopicRelatedTopic

   .. py:class:: Meta

      .. py:attribute:: global_type
         :value: False




   .. py:attribute:: guid
      :type:  str


.. py:class:: Version

   .. py:attribute:: detailed_version
      :type:  Optional[str]
      :value: None



   .. py:attribute:: version_id
      :type:  Optional[str]
      :value: None



.. py:class:: ViewPoint

   .. py:attribute:: guid
      :type:  str


   .. py:attribute:: index
      :type:  Optional[int]
      :value: None



   .. py:attribute:: snapshot
      :type:  Optional[str]
      :value: None



   .. py:attribute:: viewpoint
      :type:  Optional[str]
      :value: None



.. py:class:: ViewSetupHints

   .. py:attribute:: openings_visible
      :type:  Optional[bool]
      :value: None



   .. py:attribute:: space_boundaries_visible
      :type:  Optional[bool]
      :value: None



   .. py:attribute:: spaces_visible
      :type:  Optional[bool]
      :value: None



.. py:class:: VisualizationInfo

   VisualizationInfo documentation.


   .. py:attribute:: bitmap
      :type:  List[VisualizationInfoBitmap]
      :value: []



   .. py:attribute:: clipping_planes
      :type:  Optional[VisualizationInfoClippingPlanes]
      :value: None



   .. py:attribute:: components
      :type:  Optional[Components]
      :value: None



   .. py:attribute:: guid
      :type:  str


   .. py:attribute:: lines
      :type:  Optional[VisualizationInfoLines]
      :value: None



   .. py:attribute:: orthogonal_camera
      :type:  Optional[OrthogonalCamera]
      :value: None



   .. py:attribute:: perspective_camera
      :type:  Optional[PerspectiveCamera]
      :value: None



.. py:class:: VisualizationInfoBitmap

   .. py:class:: Meta

      .. py:attribute:: global_type
         :value: False




   .. py:attribute:: bitmap
      :type:  BitmapFormat


   .. py:attribute:: height
      :type:  float


   .. py:attribute:: location
      :type:  Point


   .. py:attribute:: normal
      :type:  Direction


   .. py:attribute:: reference
      :type:  str


   .. py:attribute:: up
      :type:  Direction


.. py:class:: VisualizationInfoClippingPlanes

   .. py:class:: Meta

      .. py:attribute:: global_type
         :value: False




   .. py:attribute:: clipping_plane
      :type:  List[ClippingPlane]
      :value: []



.. py:class:: VisualizationInfoLines

   .. py:class:: Meta

      .. py:attribute:: global_type
         :value: False




   .. py:attribute:: line
      :type:  List[Line]
      :value: []




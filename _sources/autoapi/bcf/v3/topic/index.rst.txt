:py:mod:`bcf.v3.topic`
======================

.. py:module:: bcf.v3.topic

.. autoapi-nested-parse::

   BCF XML V3 Topic handler.



Module Contents
---------------

.. py:class:: TopicHandler(topic_dir: Optional[zipfile.Path] = None, xml_handler: Optional[bcf.xml_parser.AbstractXmlParserSerializer] = None)


   BCF Topic and related objects handler.

   .. py:property:: bim_snippet
      :type: Optional[bytes]


   .. py:property:: comments
      :type: list[bcf.v3.model.Comment]

      Return the comments of the topic.


   .. py:property:: guid
      :type: Optional[str]

      Return the GUID of the topic.


   .. py:property:: header
      :type: Optional[bcf.v3.model.Header]

      Return the header of the topic.


   .. py:property:: markup
      :type: Optional[bcf.v3.model.Markup]


   .. py:property:: topic
      :type: bcf.v3.model.Topic

      Return the Topic object.


   .. py:property:: viewpoints
      :type: dict[str, bcf.v3.visinfo.VisualizationInfoHandler]


   .. py:method:: add_viewpoint(element: ifcopenshell.entity_instance) -> None

      Add a viewpoint tergeting an IFC element to the topic.

      Args:
          element: The IFC element.


   .. py:method:: add_viewpoint_from_point_and_guids(position: numpy.typing.NDArray[numpy.float_], *guids: str) -> None

      Add a viewpoint tergeting an IFC element to the topic.

      Args:
          element: The IFC element.


   .. py:method:: add_visinfo_handler(new_viewpoint: bcf.v3.visinfo.VisualizationInfoHandler) -> None


   .. py:method:: create_new(title: str, description: str, author: str, topic_type: str = '', topic_status: str = '', xml_handler: Optional[bcf.xml_parser.AbstractXmlParserSerializer] = None) -> TopicHandler
      :classmethod:

      Create a new BCF topic.

      Args:
          title: The title of the topic.
          description: The description of the topic.
          author: The author of the topic.
          topic_type: The type of the topic.
          topic_status: The status of the topic.
          xml_handler: The XML parser/serializer to use.

      Returns:
          The BCF topic definition.


   .. py:method:: save(destination_zip: bcf.inmemory_zipfile.ZipFileInterface) -> None

      Save the topic to a BCF zip file.

      Args:
          bcf_zip: The BCF zip file to save to.



